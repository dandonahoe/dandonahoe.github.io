name: Production

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
        # Allows the job to write back to 
        # the repository, necessary for actions 
        # like pushing commits or tags
        contents: write  

    # Specify the environment this job is running in
    environment: Production

    # Environment variables, with secrets injected
    env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    strategy:
            # Define a matrix to run the job 
            # with different versions of Node.js
            matrix:
                node-version: [20.x]  

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Build with Jekyll
        run: bundle exec jekyll build

      # Cache npm dependencies
      - uses: actions/cache@v3
        with:
            path: |
                ~/.npm
                **/node_modules

            # Generate a new cache whenever packages or source files change.
            key: ${{ runner.os }}-blog-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}

            # If source files changed but packages didn't, rebuild from a prior cache.
            restore-keys: |
                ${{ runner.os }}-blog-${{ hashFiles('**/package-lock.json') }}-

      # Checkout the repository
      - uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}

      # Verify Node.js version
      - run: node -v

      # Update and release
      - run: npm ci
      - run: npm run ci-semantic-release

